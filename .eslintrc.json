{
  "ignorePatterns": [
    "**/*.stories.js",
    "**/*.stories.jsx",
    "**/*.stories.ts",
    "**/*.stories.tsx",
    ".storybook/",
    "src/stories/**/*"
  ],
  "parser": "@typescript-eslint/parser",
  "extends": [
    "next/core-web-vitals",
    "plugin:storybook/recommended",
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "plugin:jsx-a11y/recommended"
  ],
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "env": {
    "browser": true,
    "es2021": true,
    "node": true
  },
  "plugins": [
    "react",
    "react-hooks",
    "@typescript-eslint",
    "import",
    "jsx-a11y"
  ],
  "parserOptions": {
    "ecmaVersion": 12,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "rules": {
    "max-lines-per-function": [
      "error",
      {
        "max": 500
      }
    ],
    "complexity": [
      "error",
      {
        "max": 10
      }
    ],
    "max-params": [
      "error",
      {
        "max": 4
      }
    ],
    "indent": [
      "error",
      2,
      {
        "SwitchCase": 1
      }
    ],
    "quotes": [
      "error",
      "single",
      {
        "avoidEscape": true
      }
    ],
    "no-unused-vars": "warn",
    "no-console": "warn",
    "comma-dangle": [
      "error",
      "always-multiline"
    ],
    "semi": [
      "error",
      "always"
    ],
    "react/react-in-jsx-scope": "off",
    "react/prop-types": "off",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "jsx-a11y/accessible-emoji": "warn",
    "import/no-unresolved": "error",
    "import/named": "off",  // Optional: Disable to avoid conflicts with TypeScript
    "import/namespace": "error",
    "import/default": "error",
    "import/export": "error",
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "external",
          "internal",
          [
            "sibling",
            "parent"
          ]
        ],
        "newlines-between": "always"
      }
    ],
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-unused-vars": "warn",
    "react/jsx-filename-extension": [
      "warn",
      {
        "extensions": [
          ".jsx",
          ".tsx"
        ]
      }
    ]
  }
}
